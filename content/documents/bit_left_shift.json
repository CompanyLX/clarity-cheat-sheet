{
  "id": "bit_left_shift",
  "name": "bit-shift-left",
  "inputs": [
    ["NUMBER-1", "int | uint"],
    ["NUMBER-2", "int | uint"],
    ["...", "int | uint"],
    ["NUMBER-N", "int | uint"]
  ],
  "output": "int | uint",
  "signature": "(bit-and NUMBER-1 NUMBER-2 ... NUMBER-N)",
  "since": 2.1,
  "description": [
    "Shifts all the bits in <i>INPUT-1</i> to the left by the number of places specified in <i>INPUT-2</i> modulo 128 (the bit width of Clarity integers).",
    "Note that there is a deliberate choice made to ignore arithmetic overflow for this operation.  In use cases where overflow should be detected, developers should use <i>*</i>, <i>/</i>, and <i>pow</i> instead of the shift operators."
  ],
  "example": [
    [">", "(bit-shift-left 2 u1)"],
    ["<", "4"],
    [">", "(bit-shift-left 16 u2)"],
    ["<", "64"],
    [">", "(bit-shift-left -64 u1)"],
    ["<", "-128"],
    [">", "(bit-shift-left u4 u2)"],
    ["<", "u16"],
    [">", "(bit-shift-left 123 u9999999999)"],
    ["<", "-170141183460469231731687303715884105728"],
    [">", "(bit-shift-left u123 u9999999999)"],
    ["<", "u170141183460469231731687303715884105728"],
    [">", "(bit-shift-left -1 u7)"],
    ["<", "-128"],
    [">", "(bit-shift-left -1 u128)"],
    ["<", "-1"]
  ]
}
