{
  "id": "at_block",
  "name": "at-block",
  "inputs": [
    ["BLOCK-HASH", "(buff 32)"],
    ["EXPRESSION", "ANY-EXPRESSION"]
  ],
  "output": "ANY-TYPES",
  "description": [
    "The <i>at-block</i> function evaluates the <b>EXPRESSION</b> <u>as if</u> it were evaluated at the end of the block indicated by the <b>BLOCK-HASH</b> argument. The <b>EXPRESSION</b> closure must be read-only.",
    "Note: The block identifying hash must be a hash returned by the <i>id-header-hash</i> block information property. This hash uniquely identifies Stacks blocks and is unique across Stacks forks. While the hash returned by <i>header-hash</i> is unique within the context of a single fork, it is not unique across Stacks forks.",
    "The function returns the result of evaluating <b>EXPRESSION</b>."
  ],
  "signature": "(at-block id-block-hash expr)",
  "examples": [
    [">", "(define-data-var data int 1)"],
    [
      ">",
      "(at-block 0x0000000000000000000000000000000000000000000000000000000000000000 block-height)"
    ],
    ["<", "u0"],
    [
      ";",
      "Throws NoSuchDataVariable because 'data' wasn't initialized at block height 0"
    ],
    [">", "(at-block (get-block-info? id-header-hash 0) (var-get data))"],
    ["!", ""]
  ]
}
