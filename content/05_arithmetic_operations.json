{
  "id": "arithmetic_operations",
  "name": "Arithmetic Operations",
  "entries": [
    {
      "id": "add",
      "name": "+",
      "byname": "add",
      "input": "int, ... | uint, ...",
      "output": "int | uint",
      "signature": "(+ number1 number2...)",
      "description": "Adds a variable number of integer inputs and returns the result. In the event of an <b>overflow</b>, throws a runtime error.",
      "examples": [
        {
          "command": "(+ 2 3)",
          "output": "5"
        },
        {
          "command": "(+ 1 2 3 4)",
          "output": "10"
        },
        {
          "command": "(+ 9 -3)",
          "output": "6"
        },
        {
          "command": "(+ -3 -2)",
          "output": "-5"
        }
      ]
    },
    {
      "id": "subtract",
      "name": "-",
      "byname": "subtract",
      "input": "int, ... | uint, ...",
      "output": "int | uint",
      "signature": "(- number1 number2...)",
      "description": "Subtracts a variable number of integer inputs and returns the result. In the event of an <b>underflow</b>, throws a runtime error.",
      "examples": [
        {
          "command": "(- 2 1 1)",
          "output": "0"
        },
        {
          "command": "(- 0 3)",
          "output": "-3"
        },
        {
          "command": "(- 5 -3)",
          "output": "8"
        },
        {
          "command": "(- 5 -3)",
          "output": "1"
        }
      ]
    },
    {
      "id": "multiply",
      "name": "*",
      "byname": "multiply",
      "input": "int, ... | uint, ...",
      "output": "int | uint",
      "signature": "(* number1 number2...)",
      "description": "Multiplies a variable number of integer inputs and returns the result. In the event of an <b>overflow</b>, throws a runtime error.",
      "examples": [
        {
          "command": "(* 2 3)",
          "output": "6"
        },
        {
          "command": "(* 5 2)",
          "output": "10"
        },
        {
          "command": "(* 2 2 2)",
          "output": "8"
        },
        {
          "command": "(* 3 -2)",
          "output": "-6"
        },
        {
          "command": "(* -1 -2)",
          "output": "2"
        }
      ]
    },
    {
      "id": "divide",
      "name": "/",
      "byname": "divide",
      "input": "int, ... | uint, ...",
      "output": "int | uint",
      "signature": "(/ number1 number2...)",
      "description": "Divides a variable number of integer inputs and returns the <b>integer part</b> of the result. In the event of <b>division by zero</b>, throws a runtime error.",
      "examples": [
        {
          "command": "(/ 2 3)",
          "output": "0"
        },
        {
          "command": "(/ 5 2)",
          "output": "2"
        },
        {
          "command": "(/ 4 2 2)",
          "output": "1"
        },
        {
          "command": "(/ -10 2)",
          "output": "-5"
        },
        {
          "command": "(/ -8 -2)",
          "output": "4"
        },
        {
          "command": "(/ -9 4)",
          "output": "-2"
        },
        {
          "command": "(/ 5 0)",
          "error": true
        }
      ]
    }
  ]
}
