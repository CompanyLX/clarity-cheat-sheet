{
  "id": "conversion_functions",
  "name": "Conversion Functions",
  "entries": [
    {
      "id": "to_int",
      "name": "to-int",
      "input": "uint",
      "output": "int",
      "signature": "(to-int u)",
      "description": "Tries to convert the <u>uint</u> argument to an <u>int</u>. Will cause a runtime error and abort if the supplied argument is >= <u>pow(2, 127)</u>",
      "examples": [
        {
          "command": "(to-int u238)",
          "output": "238"
        }
      ]
    },
    {
      "id": "to_uint",
      "name": "to-uint",
      "input": "int",
      "output": "uint",
      "signature": "(to-uint i)",
      "description": "Tries to convert the <u>int</u> argument to a <u>uint</u>. Will cause a runtime error and abort if the supplied argument is negative.",
      "examples": [
        {
          "command": "(to-uint 238)",
          "output": "u238"
        }
      ]
    },
    {
      "id": "buff_to_int_le",
      "name": "buff-to-int-le",
      "input": "(buff 16)",
      "output": "int",
      "signature": "(buff-to-int-le (buff 16))",
      "description": "Converts a byte buffer to a signed integer use a little-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a little-endian encoding, the input behaves as if it is zero-padded on the _right_.",
      "examples": [
        {
          "command": "(buff-to-int-le 0x01)",
          "output": "1"
        },
        {
          "command": "(buff-to-int-le 0x01000000000000000000000000000000)",
          "output": "1"
        },
        {
          "command": "(buff-to-int-le 0xffffffffffffffffffffffffffffffff)",
          "output": "-1"
        },
        {
          "command": "(buff-to-int-le 0x)",
          "output": "0"
        },
        {
          "command": "(buff-to-int-le 0xcafebebe)",
          "output": "3200188106"
        }
      ]
    },
    {
      "id": "buff_to_uint_le",
      "name": "buff-to-uint-le",
      "input": "(buff 16)",
      "output": "int",
      "signature": "(buff-to-uint-le (buff 16))",
      "description": "Converts a byte buffer to an unsigned integer use a little-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a little-endian encoding, the input behaves as if it is zero-padded on the _right_.",
      "examples": [
        {
          "command": "(buff-to-uint-le 0x01)",
          "output": "u1"
        },
        {
          "command": "(buff-to-uint-le 0x01000000000000000000000000000000)",
          "output": "u1"
        },
        {
          "command": "(buff-to-uint-le 0xffffffffffffffffffffffffffffffff)",
          "output": "u340282366920938463463374607431768211455"
        },
        {
          "command": "(buff-to-uint-le 0x)",
          "output": "u0"
        },
        {
          "command": "(buff-to-uint-le 0xcafebebe)",
          "output": "u3200188106"
        }
      ]
    },
    {
      "id": "buff_to_int_be",
      "name": "buff-to-int-be",
      "input": "(buff 16)",
      "output": "int",
      "signature": "(buff-to-int-be (buff 16))",
      "description": "Converts a byte buffer to a signed integer use a big-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a big-endian encoding, the input behaves as if it is zero-padded on the _left_.",
      "examples": [
        {
          "command": "(buff-to-int-be 0x01)",
          "output": "1"
        },
        {
          "command": "(buff-to-int-be 0x00000000000000000000000000000001)",
          "output": "1"
        },
        {
          "command": "(buff-to-int-be 0xffffffffffffffffffffffffffffffff)",
          "output": "-1"
        },
        {
          "command": "(buff-to-int-be 0x)",
          "output": "0"
        },
        {
          "command": "(buff-to-int-be 0xcafebebe)",
          "output": "3405692606"
        }
      ]
    },
    {
      "id": "buff_to_uint_be",
      "name": "buff-to-uint-be",
      "input": "(buff 16)",
      "output": "int",
      "signature": "(buff-to-uint-be (buff 16))",
      "description": "Converts a byte buffer to an unsigned integer use a big-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a big-endian encoding, the input behaves as if it is zero-padded on the _left_.",
      "examples": [
        {
          "command": "(buff-to-uint-be 0x01)",
          "output": "u1"
        },
        {
          "command": "(buff-to-uint-be 0x01000000000000000000000000000000)",
          "output": "u1"
        },
        {
          "command": "(buff-to-uint-be 0xffffffffffffffffffffffffffffffff)",
          "output": "u340282366920938463463374607431768211455"
        },
        {
          "command": "(buff-to-uint-be 0x)",
          "output": "u0"
        },
        {
          "command": "(buff-to-uint-be 0xcafebebe)",
          "output": "u3405692606"
        }
      ]
    },
    {
      "id": "string_to_int",
      "name": "string-to-int",
      "input": "string-ascii|string-utf8",
      "output": "int",
      "signature": "(string-to-int (string-ascii|string-utf8))",
      "description": "Converts a string, either `string-ascii` or `string-utf8`, to an optional-wrapped signed integer. If the input string does not represent a valid integer, then the function returns `none`. Otherwise it returns an integer wrapped in `some`.",
      "examples": [
        {
          "command": "(string-to-int \"1\")",
          "output": "(some 1)"
        },
        {
          "command": "(string-to-int u\"-1\")",
          "output": "(some -1)"
        },
        {
          "command": "(string-to-int \"a\")",
          "output": "(none)"
        }
      ]
    },
    {
      "id": "string_to_uint",
      "name": "string-to-uint",
      "input": "string-ascii|string-utf8",
      "output": "uint",
      "signature": "(string-to-uint (string-ascii|string-utf8))",
      "description": "Converts a string, either `string-ascii` or `string-utf8`, to an optional-wrapped unsigned integer. If the input string does not represent a valid integer, then the function returns `none`. Otherwise it returns an unsigned integer wrapped in `some`.",
      "examples": [
        {
          "command": "(string-to-uint \"1\")",
          "output": "(some u1)"
        },
        {
          "command": "(string-to-uint u\"1\")",
          "output": "(some u1)"
        },
        {
          "command": "(string-to-uint \"a\")",
          "output": "(none)"
        }
      ]
    },
    {
      "id": "int_to_ascii",
      "name": "int-to-ascii",
      "input": "int|uint",
      "output": "string-ascii",
      "signature": "(int-to-ascii (int|uint))",
      "description": "Converts an integer, either `int` or `uint`, to a `string-ascii` string-value representation.",
      "examples": [
        {
          "command": "(int-to-ascii 1)",
          "output": "\"1\""
        },
        {
          "command": "(int-to-ascii u1)",
          "output": "\"1\""
        },
        {
          "command": "(int-to-ascii -1)",
          "output": "\"-1\""
        }
      ]
    },
    {
      "id": "int_to_utf8",
      "name": "int-to-utf8",
      "input": "int|uint",
      "output": "string-utf8",
      "signature": "(int-to-utf8 (int|uint))",
      "description": "Converts an integer, either `int` or `uint`, to a `string-utf8` string-value representation.",
      "examples": [
        {
          "command": "(int-to-utf8 1)",
          "output": "u\"1\""
        },
        {
          "command": "(int-to-utf8 u1)",
          "output": "u\"1\""
        },
        {
          "command": "(int-to-utf8 -1)",
          "output": "u\"-1\""
        }
      ]
    }
  ]
}
